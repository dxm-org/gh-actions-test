
name: test1

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Get the commit message
      run: echo "The commit message is ${{ github.event.head_commit.message }}"

    - name: determine which jobs to skip
      uses: actions/github-script@v3
      id: skip
      with:
        #github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          // get the commit message
          const commitMessage = "${{github.event.head_commit.message}}";

          // check if the commit message matches the regex
          const jobToSkip = commitMessage.match(/\[skip:(\s\w)+\]/);

          // print the value out
          console.log(jobToSkip);

          // if it does, return the 1st capturing group
          if (jobToSkip) {
            // trim the string, then split it into an array using the space as a delimiter
            jobsToSkip = jobToSkip[1].trim().split(' ');

            matrixJobs = ['a', 'b', 'c']
            // return only those matrixJobs that are NOT in the jobsToSkip array
            return matrixJobs.filter(x => !jobsToSkip.includes(x));
          }

          // otherwise, return an empty string
          return '';

  # log-github-event-goodies:
  #   name: "LOG Everything on GitHub Event"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Logging
  #       run: |
  #         echo "${{toJSON(github.event)}}"

  test_matrix:
    strategy:
      matrix:
        name: ['a', 'b', 'c']
      max-parallel: 3
    runs-on: ubuntu-latest
    steps:
    - name: Run a matrix ${{ matrix.name }}!
      run: echo "Hello ${{ matrix.name }}!"
